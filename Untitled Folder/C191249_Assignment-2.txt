/*ID-C191249*/
/*1. Tower of Hanoi*/

#include <bits/stdc++.h>
using namespace std;

void towerOfHanoi(int n, char from_rod, char to_rod, char aux_rod)
{
	if (n == 1)
	{
		cout << "Move disk 1 from rod " << from_rod << " to rod " << to_rod<<endl;
		return;
	}
	towerOfHanoi(n - 1, from_rod, aux_rod, to_rod);
	cout << "Move disk " << n << " from rod " << from_rod << " to rod " << to_rod << endl;
	towerOfHanoi(n - 1, aux_rod, to_rod, from_rod);
}

int main()
{
	int n;
	cin >> n;
	towerOfHanoi(n, 'A', 'C', 'B');
	return 0;
}

-----------------------------------------------------------------------------------------------
/*2. Palindrome using stack*/

#include <malloc.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char* stack;
int top = -1;

void push(char ele)
{
	stack[++top] = ele;
}

char pop()
{
	return stack[top--];
}

int isPalindrome(char str[])
{
	int length = strlen(str);

	stack = (char*)malloc(length * sizeof(char));

	int i, mid = length / 2;

	for(i = 0; i < mid; i++)
    {
		push(str[i]);
	}

	if(length % 2 != 0)
    {
		i++;
	}
	while(str[i] != '\0')
    {
		char ele = pop();
		if (ele != str[i])
			return 0;
		i++;
	}

	return 1;
}

int main()
{
	char str[] = "madam";

	if(isPalindrome(str))
    {
		printf("Yes");
	}
	else
	{
		printf("No");
	}

	return 0;
}